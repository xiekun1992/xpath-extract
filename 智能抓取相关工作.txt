后端处理：

输入：网址

渲染页面：根据传入的网址访问网站并在后端解析出页面（包括多页面和Ajax单页面）

处理页面内容：
	从渲染好的页面中，
	1、删除全部的script标签
	2、删除a标签的href属性（或改为javascript:void(0)）
	3、删除所有元素的事件绑定属性（如：onclick、onsubmit，带on开头的）
	4、把相对路径引用转换为http://开头的绝对路径（包括页面内容中标签的src='...'、href='....'、this.src='...'、this.href='....'、css样式中带有url('....')的值）
	5、替换input和button的type="submit" 为 type="button"

输出：处理后的页面内容

接口处理：

从后端获取处理后的页面，并构建dom树，为每个节点编号，并做缓存
有接口负责xpath抽取

前端处理：

添加用户交互的脚本和样式显示


将用户选择的节点传递给接口，获取到匹配的节点显示到界面上


--------------------------------------------------------

待优化内容：
1. 选择的dom节点为链接包含的节点时，不能提取到链接的xpath
2. 优化选择方式


目前的做法是在浏览器中提取xpath：存在一些问题

注意内容：
1. 由于源代码和运行的代码不一定一样，从浏览器获取的xpath不一定就和从源码构建dom数获取的xpath相同，原因是浏览器的自动标签补齐导致，如<tbody>,<body>,<p>
2. 如果页面中包含iframe会导致xpath无法选中，需要打开iframe去提取xpath